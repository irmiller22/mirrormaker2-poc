---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  name: kafka-mirror
spec:
  version: 3.4.0
  replicas: 1
  # The cluster alias for Kafka Connect
  connectCluster: "kafka-broker-1"
  clusters:
  ############### SOURCE CLUSTER (Active) ################
  - alias: "uat-gcp-us-west1-leopard"
    bootstrapServers: pkc-lgk0v.us-west1.gcp.confluent.cloud:9092
    authentication: 
      type: plain
      username: QDDKG5MRZFQ5KG3D
      passwordSecret:
        secretName: uat-gcp-us-west1-leopard
        password: user.password
    config:
      # -1 means it will use the default replication factor configured in the broker
      config.storage.replication.factor: -1
      offset.storage.replication.factor: -1
      status.storage.replication.factor: -1   
      # avro serialization / deserialization
      key.converter: org.apache.kafka.connect.storage.StringConverter
      value.converter: io.confluent.connect.avro.AvroConverter
      value.converter.schema.registry.url: https://psrc-0xx5p.us-central1.gcp.confluent.cloud
      value.converter.schema.registry.basic.auth.user.info: ITVIFZFRINOXN3BN:<redacted>
      # security
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      # producer.security.protocol: PLAINTEXT
      # consumer.security.protocol: PLAINTEXT
      # admin.security.protocol: PLAINTEXT
  ############### TARGET CLUSTER (Passive) ################        
  - alias: "kafka-broker-1"
    bootstrapServers: kafka-broker-1-kafka-bootstrap:9093
    # authentication:
    #   type: plain
    #   username: admin-user-1
    #   passwordSecret:
    #     secretName: admin-user-1
    #     password: password
    tls:
      trustedCertificates:
      - secretName: kafka-broker-1-cluster-ca-cert
        certificate: ca.crt
    authentication: 
      type: tls
      certificateAndKey:
        secretName: admin-user-1
        certificate: user.crt
        key: user.key
    config:
      # The following KafkaConnect topics are created by default. You can change the default
      # replication factors (it is 3) and their names here.
      #
      # Kafka topic that stores connector and task status configurations
      # Replication factor for internal topic 'mirrormaker2-cluster-configs'
      config.storage.replication.factor: 1
      config.storage.topic: mirrormaker2-cluster-configs
      #
      # Kafka topic that stores connector offsets.
      # Replication factor for internal topic 'mirrormaker2-cluster-offsets'
      offset.storage.replication.factor: 1
      offset.storage.topic: mirrormaker2-cluster-offsets
      #
      # Kafka topic that stores connector and task status updates.
      # Replication factor for internal topic 'mirrormaker2-cluster-status'
      status.storage.replication.factor: 1
      status.storage.topic: mirrormaker2-cluster-status
      #
      #ssl.cipher.suites: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      #ssl.enabled.protocols: "TLSv1.2"
      #ssl.protocol: "TLSv1.2"
      #compression.type: gzip
      #batch.size: 8192      
  mirrors:
  #######################
  # Replication flows
  #######################
  - sourceCluster: "uat-gcp-us-west1-leopard"
    targetCluster: "kafka-broker-1"
    sourceConnector:
      tasksMax: 1
      config:
        # The replication factor for mirrored topics created at the target cluster
        replication.factor: 1
        # The replication factor for the MirrorSourceConnector 'offset-syncs' internal topic
        # that maps the offsets of the source and target clusters.
        offset-syncs.topic.replication.factor: 1
        sync.topic.acls.enabled: "false"
        # Defines the separator used for the renaming of remote topics (useful when mirroring ACTIVE / ACTIVE clusters)
        replication.policy.separator: "."
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
        # Refresh interval to check new topics created in source cluster
        refresh.topics.interval.seconds: 60
    heartbeatConnector:
      config:
        # Internal topic 'heartbeats' created at the target cluster
        heartbeats.topic.replication.factor: 1
    checkpointConnector:
      config:
        # Internal topic '<source-cluster-alias>.checkpoints.internal' created at the target cluster
        checkpoints.topic.replication.factor: 1
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"        
        # Offset synchronization periodically transfers the consumer offsets for the consumer groups
        # of a source cluster into the consumer offsets topic of a target cluster.
        sync.group.offsets.enabled: true
        # Interval period to sync data offsets from source cluster
        #sync.group.offsets.interval.seconds: 60
        #emit.checkpoints.interval.seconds: 60
        # Interval period to refresh consumer groups statuses (Default: 600)
        refresh.groups.interval.seconds: 60
    topicsPattern: ".*"
    groupsPattern: ".*"
  logging:
    type: inline
    loggers:
      connect.root.logger.level: "INFO"
  readinessProbe:
    initialDelaySeconds: 45
    timeoutSeconds: 5
  livenessProbe:
    initialDelaySeconds: 45
    timeoutSeconds: 5
